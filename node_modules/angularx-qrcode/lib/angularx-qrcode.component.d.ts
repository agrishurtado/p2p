import { ElementRef, OnChanges, Renderer2 } from '@angular/core';
import { QRCodeErrorCorrectionLevel, QRCodeVersion, QRCodeElementType } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class QRCodeComponent implements OnChanges {
    private renderer;
    private readonly platformId;
    colordark: string;
    colorlight: string;
    level: string;
    hidetitle: boolean;
    size: number;
    usesvg: boolean;
    allowEmptyString: boolean;
    qrdata: string;
    colorDark: string;
    colorLight: string;
    cssClass: string;
    elementType: keyof typeof QRCodeElementType;
    errorCorrectionLevel: keyof typeof QRCodeErrorCorrectionLevel;
    margin: number;
    scale: number;
    version: QRCodeVersion;
    width: number;
    qrcElement: ElementRef;
    constructor(renderer: Renderer2, platformId: any);
    ngOnChanges(): void;
    protected isValidQrCodeText(data: string | null): boolean;
    private toDataURL;
    private toCanvas;
    private toSVG;
    private renderElement;
    private createQRCode;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<QRCodeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<QRCodeComponent, "qrcode", never, { "colordark": "colordark"; "colorlight": "colorlight"; "level": "level"; "hidetitle": "hidetitle"; "size": "size"; "usesvg": "usesvg"; "allowEmptyString": "allowEmptyString"; "qrdata": "qrdata"; "colorDark": "colorDark"; "colorLight": "colorLight"; "cssClass": "cssClass"; "elementType": "elementType"; "errorCorrectionLevel": "errorCorrectionLevel"; "margin": "margin"; "scale": "scale"; "width": "width"; "version": "version"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcngtcXJjb2RlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyeC1xcmNvZGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBRUkNvZGVFcnJvckNvcnJlY3Rpb25MZXZlbCwgUVJDb2RlVmVyc2lvbiwgUVJDb2RlRWxlbWVudFR5cGUgfSBmcm9tICcuL3R5cGVzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFFSQ29kZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IHBsYXRmb3JtSWQ7XG4gICAgY29sb3JkYXJrOiBzdHJpbmc7XG4gICAgY29sb3JsaWdodDogc3RyaW5nO1xuICAgIGxldmVsOiBzdHJpbmc7XG4gICAgaGlkZXRpdGxlOiBib29sZWFuO1xuICAgIHNpemU6IG51bWJlcjtcbiAgICB1c2Vzdmc6IGJvb2xlYW47XG4gICAgYWxsb3dFbXB0eVN0cmluZzogYm9vbGVhbjtcbiAgICBxcmRhdGE6IHN0cmluZztcbiAgICBjb2xvckRhcms6IHN0cmluZztcbiAgICBjb2xvckxpZ2h0OiBzdHJpbmc7XG4gICAgY3NzQ2xhc3M6IHN0cmluZztcbiAgICBlbGVtZW50VHlwZToga2V5b2YgdHlwZW9mIFFSQ29kZUVsZW1lbnRUeXBlO1xuICAgIGVycm9yQ29ycmVjdGlvbkxldmVsOiBrZXlvZiB0eXBlb2YgUVJDb2RlRXJyb3JDb3JyZWN0aW9uTGV2ZWw7XG4gICAgbWFyZ2luOiBudW1iZXI7XG4gICAgc2NhbGU6IG51bWJlcjtcbiAgICB2ZXJzaW9uOiBRUkNvZGVWZXJzaW9uO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgcXJjRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBwbGF0Zm9ybUlkOiBhbnkpO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIGlzVmFsaWRRckNvZGVUZXh0KGRhdGE6IHN0cmluZyB8IG51bGwpOiBib29sZWFuO1xuICAgIHByaXZhdGUgdG9EYXRhVVJMO1xuICAgIHByaXZhdGUgdG9DYW52YXM7XG4gICAgcHJpdmF0ZSB0b1NWRztcbiAgICBwcml2YXRlIHJlbmRlckVsZW1lbnQ7XG4gICAgcHJpdmF0ZSBjcmVhdGVRUkNvZGU7XG59XG4iXX0=